/**
 * This file is generated by jsonrpcstub, DO NOT CHANGE IT MANUALLY!
 */

#ifndef JSONRPC_CPP_STUB_DEV_RPC_SKALESTATSFACE_H_
#define JSONRPC_CPP_STUB_DEV_RPC_SKALESTATSFACE_H_

#include "ModularServer.h"

namespace dev {
namespace rpc {

class SkaleStatsFace : public ServerInterface< SkaleStatsFace > {
public:
    SkaleStatsFace() {
        this->bindAndAddMethod( jsonrpc::Procedure( "skale_stats", jsonrpc::PARAMS_BY_POSITION,
                                    jsonrpc::JSON_STRING, NULL ),
            &dev::rpc::SkaleStatsFace::skale_statsI );
        this->bindAndAddMethod( jsonrpc::Procedure( "skale_nodesRpcInfo",
                                    jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_STRING, NULL ),
            &dev::rpc::SkaleStatsFace::skale_nodesRpcInfoI );
        this->bindAndAddMethod( jsonrpc::Procedure( "skale_imaInfo", jsonrpc::PARAMS_BY_POSITION,
                                    jsonrpc::JSON_STRING, NULL ),
            &dev::rpc::SkaleStatsFace::skale_imaInfoI );
    }

    inline virtual void skale_statsI( const Json::Value& request, Json::Value& response ) {
        ( void ) request;
        response = this->skale_stats();
    }
    inline virtual void skale_nodesRpcInfoI( const Json::Value& request, Json::Value& response ) {
        ( void ) request;
        response = this->skale_nodesRpcInfo();
    }
    inline virtual void skale_imaInfoI( const Json::Value& request, Json::Value& response ) {
        ( void ) request;
        response = this->skale_imaInfo();
    }

    virtual Json::Value skale_stats() = 0;
    virtual Json::Value skale_nodesRpcInfo() = 0;
    virtual Json::Value skale_imaInfo() = 0;

};  /// class SkaleStatsFace

}  // namespace rpc
}  // namespace dev

#endif  // JSONRPC_CPP_STUB_DEV_RPC_SKALESTATSFACE_H_
